{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCat","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","cat","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAkB,IAAfC,EAAc,EAAdA,OAAc,EAELC,mBAAU,IAFL,mBAElCC,EAFkC,KAEtBC,EAFsB,KAuBzC,OACI,uBAAMC,SAdY,SAACC,GAEnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAQ,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OAChCN,EAAc,MAOlB,UACI,mCAAOD,EAAP,OACA,6CAEA,uBACIQ,KAAK,OACLC,MAAST,EACTU,SA3Bc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,c,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGCI,MAAOF,GAHR,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAA0B,IAAvBJ,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAItC,OAFAc,QAAQC,IAAK,CAAEN,KAAIC,QAAOV,QAGtB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAOjB,EAAMkB,IAAOR,IACzB,kCAAMA,EAAN,WCJCS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAyBxC,OAlBAC,qBAAW,WAEP1B,EAASC,GACJ0B,MAAM,SAAAC,GAEHC,YAAY,WAERJ,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAGd,WAGZ,CAAEtB,IAGEuB,EDlBwBM,CAAc7B,GAAjCa,EALyB,EAK9BN,KAAae,EALiB,EAKjBA,QAOpB,OACI,qCACI,mCAAOtB,EAAP,OAEEsB,GAAW,aAEb,qBAAKJ,UAAU,YAAf,SAEQL,EAAOJ,KAAK,SAAAC,GAAG,OAEX,cAAC,EAAD,eAESA,GADEA,EAAIC,aEIxBmB,EA5BM,WAAO,IAAD,EAED5C,mBAAS,CAAC,WAFT,mBAEhB6C,EAFgB,KAEX9C,EAFW,KAIvB,OAEI,qCACI,8CACA,cAAC,EAAD,CAAaA,OAASA,IACtB,uBAEA,6BAEQ8C,EAAItB,KAAK,SAACT,GAAD,OACL,cAAC,EAAD,CAEIA,SAAYA,GADLA,Y,MCbnCgC,IAASC,OAAQ,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.fadb26ad.chunk.js","sourcesContent":["import React, {useState} from 'react'; \r\nimport { PropTypes } from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCat } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState( '' );\r\n  \r\n    const handdleInputValue = (e) => {\r\n\r\n        setInputValue(e.target.value);\r\n\r\n    };\r\n\r\n    const handdleSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n        //console.log('Submit hecho')\r\n        if (inputValue.trim().length > 3) {\r\n\r\n            setCat( cats => [inputValue, ...cats] );\r\n            setInputValue('');\r\n\r\n        };\r\n\r\n    };\r\n\r\n    return (\r\n        <form onSubmit= { handdleSubmit } >\r\n            <h1> { inputValue } </h1>\r\n            <h2>AddCategory</h2>\r\n\r\n            <input \r\n                type=\"text\"\r\n                value= { inputValue }\r\n                onChange= { handdleInputValue }\r\n            />\r\n        </form>\r\n    );\r\n    \r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCat: PropTypes.func.isRequired\r\n};","\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=08&api_key=ty60NfqFzLeb9YwboDJifogOF7EFFgXQ`;\r\n    const resp  = await fetch( url );\r\n    const { data } = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    });\r\n  \r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n\r\n    console.log( { id, title, url } );\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src= { url } alt= { title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n// import { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    // const [images, setImages] = useState([]);    \r\n\r\n    const {data:images, loading} = useFetchGifs( category );\r\n\r\n    // useEffect( () => {\r\n    //     getGifs( category )\r\n    //         .then( setImages )\r\n    // }, [ category ] );\r\n\r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n\r\n            { loading && 'Cargando..' }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n\r\n                        <GifGridItem\r\n                            key= { img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n};","import {useEffect, useState} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {   \r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                setTimeout( () => {\r\n\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n\r\n                }, 1500)\r\n            })\r\n\r\n    }, [ category ]);\r\n\r\n    \r\n    return state; // {data: [], loading: true}\r\n\r\n}\r\n","import React, {useState} from 'react'; \r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [cat, setCat] = useState(['Naruto']);\r\n\r\n    return (\r\n\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCat= {setCat} />\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    cat.map( (category) => (                         \r\n                        <GifGrid\r\n                            key= { category }\r\n                            category= { category }\r\n                        />\r\n                    ))\r\n                }    \r\n            </ol>       \r\n        </>\r\n\r\n    );\r\n\r\n\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render( <GifExpertApp />, document.getElementById('root'));\n\n//Crear un componente llamado gifExpertApp y que contenga un h2 con \"GifExpertApp\" y un hr\n\n"],"sourceRoot":""}